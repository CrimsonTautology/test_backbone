// Generated by CoffeeScript 1.8.0
(function() {
  var TodoView, app,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app = app || {};

  TodoView = (function(_super) {
    __extends(TodoView, _super);

    function TodoView() {
      return TodoView.__super__.constructor.apply(this, arguments);
    }

    TodoView.prototype.tagName = 'li';

    TodoView.prototype.template = _.template($('#item-template').html());

    TodoView.prototype.events = {
      'dblclick label': 'edit',
      'keypress .edit': 'updateOnEnter',
      'blur .edit': 'close'
    };

    TodoView.prototype.initialize = function() {
      return this.listenTo(this.model, 'change', this.render);
    };

    TodoView.prototype.render = function() {
      this.$el.html(this.template(this.model.attributes));
      this.$input = this.$('.edit');
      return this;
    };

    TodoView.prototype.edit = function() {
      this.$el.addClass('editing');
      return this.$input.focus();
    };

    TodoView.prototype.close = function() {
      var value;
      value = this.$input.val().trim();
      if (value) {
        this.model.save({
          title: value
        });
      }
      return this.$el.removeClass('editing');
    };

    TodoView.prototype.updateOnEnter = function(e) {
      if (e.which === ENTER_KEY) {
        return this.close();
      }
    };

    return TodoView;

  })(Backbone.View);

}).call(this);
